# -*- coding: utf-8 -*-
"""Pygame Pi

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PpisTqBKiiGPtI7rrc0EHYLR-FnFYMUt
"""

!pip install pygame
import pygame
import os
import pickle
import random
import matplotlib.pyplot as plt
import time

FOLDER_PATH = "/content/drive/MyDrive/Code/Pi"

initialized = True

os.environ["SDL_VIDEODRIVER"] = "dummy"
pygame.font.init()
pygame.init()
WIDTH = 12000
HEIGHT = 12000
ROW = HEIGHT // 20
COL = WIDTH // 20
FONT_SIZE = ROW

screen = pygame.display.set_mode((WIDTH,HEIGHT),0,32)

within_circle = 0
outside_circle = 0

if not initialized:
    dots = []
else:
    with open(FOLDER_PATH + "/dots.txt", "rb") as f:
        dots = pickle.loads(f.read())
    for dot in dots:
        dot_x, dot_y = dot
        if (dot_x - HEIGHT*0.5) ** 2 + (dot_y - HEIGHT*0.5) ** 2 > (HEIGHT * 0.3) ** 2:
            outside_circle += 1
        else:
            within_circle += 1

def msg2screen(txt, x, y, color=(0, 0, 0), size=35):
    screen_txt = pygame.font.SysFont(None, size).render(txt, True, color)
    screen.blit(screen_txt, (x,y))

while True:
    a = time.time()
    screen.fill((0, 0, 0))

    pygame.draw.rect(screen, (0, 255, 125), (HEIGHT * 0.2, HEIGHT * 0.2, HEIGHT * 0.6, HEIGHT * 0.6), FONT_SIZE//5)
    pygame.draw.circle(screen, (255, 125, 0), (HEIGHT * 0.5, HEIGHT * 0.5), HEIGHT * 0.3, FONT_SIZE//5)

    for (x,y) in dots:
        screen.set_at((x,y), (255,255,255))


    msg2screen(f"Within Circle: {within_circle}", COL, ROW, (0, 125, 0), FONT_SIZE)
    msg2screen(f"Outside Circle: {outside_circle}", COL, ROW*2, (0, 125, 0), FONT_SIZE)
    msg2screen(f"Est. Pi: {within_circle / max(1, outside_circle+within_circle) * 4}", COL, ROW*3, (0, 125, 0), FONT_SIZE)

    for i in range(1000):
        dot_x = random.randrange(int(HEIGHT*0.2), int(HEIGHT*0.8))
        dot_y = random.randrange(int(HEIGHT*0.2), int(HEIGHT*0.8))
        if (dot_x - HEIGHT*0.5) ** 2 + (dot_y - HEIGHT*0.5) ** 2 > (HEIGHT * 0.3) ** 2:
            outside_circle += 1
        else:
            within_circle += 1

        dots.append((dot_x, dot_y))
    pygame.display.update()

    pygame.image.save(screen, f"{FOLDER_PATH}/Images/{int(len(dots)/1000)}.png")

    if len(dots) > 0 and len(dots) % 10000 == 0:
        with open(FOLDER_PATH + "/dots.txt", "wb") as f:
            f.write(pickle.dumps(dots))
    print(int(len(dots)/1000), os.path.getsize(f"{FOLDER_PATH}/Images/{int(len(dots)/1000)}.png")//1000000,"mb", round((time.time()-a)), "sec")
    a = time.time()